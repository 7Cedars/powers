{"abi":[{"type":"constructor","inputs":[{"name":"_allo","type":"address","internalType":"address"},{"name":"_name","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"NATIVE","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"allocate","inputs":[{"name":"_data","type":"bytes","internalType":"bytes"},{"name":"_sender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"distribute","inputs":[{"name":"_recipientIds","type":"address[]","internalType":"address[]"},{"name":"_data","type":"bytes","internalType":"bytes"},{"name":"_sender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAllo","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAllo"}],"stateMutability":"view"},{"type":"function","name":"getPayouts","inputs":[{"name":"_recipientIds","type":"address[]","internalType":"address[]"},{"name":"_data","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IStrategy.PayoutSummary[]","components":[{"name":"recipientAddress","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getPoolAmount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getPoolId","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRecipientStatus","inputs":[{"name":"_recipientId","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint8","internalType":"enum IStrategy.Status"}],"stateMutability":"view"},{"type":"function","name":"getStrategyId","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"increasePoolAmount","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initialize","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isPoolActive","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isValidAllocator","inputs":[{"name":"_allocator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"registerRecipient","inputs":[{"name":"_data","type":"bytes","internalType":"bytes"},{"name":"_sender","type":"address","internalType":"address"}],"outputs":[{"name":"recipientId","type":"address","internalType":"address"}],"stateMutability":"payable"},{"type":"function","name":"withdraw","inputs":[{"name":"_token","type":"address","internalType":"address"},{"name":"_recipient","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Allocated","inputs":[{"name":"recipientId","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"sender","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Distributed","inputs":[{"name":"recipientId","type":"address","indexed":true,"internalType":"address"},{"name":"recipientAddress","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"sender","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"poolId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"PoolActive","inputs":[{"name":"active","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Registered","inputs":[{"name":"recipientId","type":"address","indexed":true,"internalType":"address"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"sender","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"ALLOCATION_ACTIVE","inputs":[]},{"type":"error","name":"ALLOCATION_NOT_ACTIVE","inputs":[]},{"type":"error","name":"ALLOCATION_NOT_ENDED","inputs":[]},{"type":"error","name":"ALREADY_INITIALIZED","inputs":[]},{"type":"error","name":"AMOUNT_MISMATCH","inputs":[]},{"type":"error","name":"ANCHOR_ERROR","inputs":[]},{"type":"error","name":"ARRAY_MISMATCH","inputs":[]},{"type":"error","name":"INPUT_LENGTH_MISMATCH","inputs":[]},{"type":"error","name":"INVALID","inputs":[]},{"type":"error","name":"INVALID_ADDRESS","inputs":[]},{"type":"error","name":"INVALID_FEE","inputs":[]},{"type":"error","name":"INVALID_METADATA","inputs":[]},{"type":"error","name":"INVALID_REGISTRATION","inputs":[]},{"type":"error","name":"IS_APPROVED_STRATEGY","inputs":[]},{"type":"error","name":"MISMATCH","inputs":[]},{"type":"error","name":"NONCE_NOT_AVAILABLE","inputs":[]},{"type":"error","name":"NON_ZERO_VALUE","inputs":[]},{"type":"error","name":"NOOP","inputs":[]},{"type":"error","name":"NOT_APPROVED_STRATEGY","inputs":[]},{"type":"error","name":"NOT_ENOUGH_FUNDS","inputs":[]},{"type":"error","name":"NOT_IMPLEMENTED","inputs":[]},{"type":"error","name":"NOT_INITIALIZED","inputs":[]},{"type":"error","name":"NOT_PENDING_OWNER","inputs":[]},{"type":"error","name":"POOL_ACTIVE","inputs":[]},{"type":"error","name":"POOL_INACTIVE","inputs":[]},{"type":"error","name":"RECIPIENT_ALREADY_ACCEPTED","inputs":[]},{"type":"error","name":"RECIPIENT_ERROR","inputs":[{"name":"recipientId","type":"address","internalType":"address"}]},{"type":"error","name":"RECIPIENT_NOT_ACCEPTED","inputs":[]},{"type":"error","name":"REGISTRATION_ACTIVE","inputs":[]},{"type":"error","name":"REGISTRATION_NOT_ACTIVE","inputs":[]},{"type":"error","name":"UNAUTHORIZED","inputs":[]},{"type":"error","name":"ZERO_ADDRESS","inputs":[]}],"bytecode":{"object":"","sourceMap":"164:2708:8:-:0;;;266:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5268:19:7;;;;5320:17;;327:5:8;;334;;5320:17:7;;334:5:8;;5320:17:7;;;:::i;:::-;;;;-1:-1:-1;;5320:17:7;;;;;;;;;5310:28;;5320:17;5310:28;;;;5297:41;;-1:-1:-1;164:2708:8;;-1:-1:-1;;;164:2708:8;14:127:10;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:10;370:16;;363:27;146:250::o;401:1064::-;490:6;498;551:2;539:9;530:7;526:23;522:32;519:52;;;567:1;564;557:12;519:52;593:16;;-1:-1:-1;;;;;638:31:10;;628:42;;618:70;;684:1;681;674:12;618:70;756:2;741:18;;735:25;707:5;;-1:-1:-1;;;;;;809:14:10;;;806:34;;;836:1;833;826:12;806:34;874:6;863:9;859:22;849:32;;919:7;912:4;908:2;904:13;900:27;890:55;;941:1;938;931:12;890:55;970:2;964:9;992:2;988;985:10;982:36;;;998:18;;:::i;:::-;1073:2;1067:9;1041:2;1127:13;;-1:-1:-1;;1123:22:10;;;1147:2;1119:31;1115:40;1103:53;;;1171:18;;;1191:22;;;1168:46;1165:72;;;1217:18;;:::i;:::-;1257:10;1253:2;1246:22;1292:2;1284:6;1277:18;1332:7;1327:2;1322;1318;1314:11;1310:20;1307:33;1304:53;;;1353:1;1350;1343:12;1304:53;1366:68;1431:2;1426;1418:6;1414:15;1409:2;1405;1401:11;1366:68;:::i;:::-;1453:6;1443:16;;;;;;;401:1064;;;;;:::o;1470:396::-;1619:2;1608:9;1601:21;1582:4;1651:6;1645:13;1694:6;1689:2;1678:9;1674:18;1667:34;1710:79;1782:6;1777:2;1766:9;1762:18;1757:2;1749:6;1745:15;1710:79;:::i;:::-;1850:2;1829:15;-1:-1:-1;;1825:29:10;1810:45;;;;1857:2;1806:54;;1470:396;-1:-1:-1;;1470:396:10:o;:::-;164:2708:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"","sourceMap":"164:2708:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10705:325:7;;;;;;;;;;-1:-1:-1;10705:325:7;;;;;:::i;:::-;;:::i;:::-;;6785:86;;;;;;;;;;-1:-1:-1;6860:4:7;6785:86;;;-1:-1:-1;;;;;3571:55:10;;;3553:74;;3541:2;3526:18;6785:86:7;;;;;;;;9429:344;;;;;;:::i;:::-;;:::i;6953:92::-;;;;;;;;;;-1:-1:-1;7032:6:7;;6953:92;;;4475:25:10;;;4463:2;4448:18;6953:92:7;4329:177:10;7135:100:7;;;;;;;;;;-1:-1:-1;7218:10:7;7135:100;;7326:108;;;;;;;;;;-1:-1:-1;7417:10:7;;7326:108;;12395:145;;;;;;;;;;-1:-1:-1;12395:145:7;;;;;:::i;:::-;;:::i;:::-;;;5110:14:10;;5103:22;5085:41;;5073:2;5058:18;12395:145:7;4945:187:10;4412:75:5;;;;;;;;;;;;4445:42;4412:75;;11367:704:7;;;;;;;;;;-1:-1:-1;11367:704:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7566:101::-;;;;;;;;;;-1:-1:-1;7622:4:7;14495:10;;;7566:101;;7823:146;;;;;;;;;;-1:-1:-1;7823:146:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;349:170:8:-;;;;;;;;;;-1:-1:-1;349:170:8;;;;;:::i;:::-;;:::i;10092:220:7:-;;;;;;:::i;:::-;;:::i;8816:197::-;;;;;;;;;;-1:-1:-1;8816:197:7;;;;;:::i;:::-;;:::i;652:222:8:-;;;;;;;;;;-1:-1:-1;652:222:8;;;;;:::i;:::-;;:::i;10705:325:7:-;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10924:42:::2;10936:13;10951:5;10958:7;10924:11;:42::i;:::-;10705:325:::0;;;:::o;9429:344::-;9584:19;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;-1:-1:-1::0;2683:7:8;9727:39:7::2;9429:344:::0;;;;:::o;12395:145::-;12481:4;;12504:29;2482:95:8;11367:704:7;11585:20;;11741:12;;11521:22;;11585:20;11722:31;;11718:60;;11762:16;;-1:-1:-1;;;11762:16:7;;;;;;;;;;;11718:60;11789:30;11842:15;11822:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;11822:36:7;;;;;;;;;;;;;;;;11789:69;;11873:9;11868:173;11888:15;11884:1;:19;11868:173;;;11933:38;11944:13;11958:1;11944:16;;;;;;;;:::i;:::-;;;;;;;11962:5;11968:1;11962:8;;;;;;;;:::i;:::-;;;;;;;11933:10;:38::i;:::-;11920:7;11928:1;11920:10;;;;;;;;:::i;:::-;;;;;;;;;;:51;12013:3;;11868:173;;;-1:-1:-1;12057:7:7;11367:704;-1:-1:-1;;;;11367:704:7:o;7823:146::-;7904:6;7929:33;7949:12;7929:19;:33::i;349:170:8:-;442:28;462:7;442:19;:28::i;:::-;485:27;497:7;506:5;485:27;;;;;;;:::i;:::-;;;;;;;;349:170;;:::o;10092:220:7:-;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10240:25:::2;10250:5;10257:7;10240:9;:25::i;:::-;10092:220:::0;;:::o;8816:197::-;5660:16;:14;:16::i;:::-;8956:7:::1;8942:10;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8973:33:7::1;::::0;-1:-1:-1;8998:7:7;8973:33;:::i:1;:::-;8816:197:::0;:::o;652:222:8:-;731:10;5954:30:7;5976:7;5954:21;:30::i;:::-;775:10:8::1;::::0;;753:19:::1;795:14:::0;;;819:48:::1;835:6:::0;843:10;775;819:15:::1;:48::i;:::-;743:131;652:222:::0;;;:::o;12814:111:7:-;12868:10;-1:-1:-1;;;;;12890:4:7;12868:27;;12864:54;;12904:14;;-1:-1:-1;;;12904:14:7;;;;;;;;;;;12864:54;12814:111::o;13787:105::-;13848:6;;13858:1;13848:11;13844:41;;13868:17;;-1:-1:-1;;;13868:17:7;;;;;;;;;;;1070:1112:8;1246:7;5954:30:7;5976:7;5954:21;:30::i;:::-;1313:24:8::1;1351:17;1340:42;;;;;;;;;;;;:::i;:::-;1416:20:::0;;1313:69;;-1:-1:-1;1393:20:8::1;1492:17:::0;;;1488:78:::1;;1532:23;;-1:-1:-1::0;;;1532:23:8::1;;;;;;;;;;;1488:78;1652:7;:14;1636:12;:30;1632:91;;1689:23;;-1:-1:-1::0;;;1689:23:8::1;;;;;;;;;;;1632:91;1771:6;::::0;1758:20:::1;::::0;-1:-1:-1;;;1758:20:8;;1733:22:::1;::::0;-1:-1:-1;;;;;1758:4:8::1;:12;::::0;::::1;::::0;:20:::1;::::0;::::1;;4475:25:10::0;;;4463:2;4448:18;;4329:177;1758:20:8::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1758:20:8::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1733:45;;1793:9;1788:388;1808:12;1804:1;:16;1788:388;;;1837:14;1854:7;1862:1;1854:10;;;;;;;;:::i;:::-;;;;;;;1837:27;;1878:24;1905:13;1919:1;1905:16;;;;;;;;:::i;:::-;;;;;;;1878:43;;1950:6;1936:10;;:20;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;1986:10:8::1;::::0;::::1;::::0;1970:53:::1;::::0;1998:16;2016:6;1970:15:::1;:53::i;:::-;2042:64;::::0;;-1:-1:-1;;;;;2042:64:8;;::::1;12721:34:10::0;;;12786:2;12771:18;;12764:34;;;12834:15;;;12814:18;;;12807:43;2042:64:8;;::::1;::::0;;;;12648:2:10;2042:64:8;;::::1;-1:-1:-1::0;;2148:3:8::1;;1788:388;;;;1259:923;;;1070:1112:::0;;;;:::o;2700:170::-;-1:-1:-1;;;;;;;;;;;;;;;;;2842:20:8;-1:-1:-1;2360:116:8;2438:6;2463;;-1:-1:-1;;;2463:6:8;;;;;;;;;;;8269:350:7;5660:16;:14;:16::i;:::-;8428:6:::1;::::0;:11;8424:45:::1;;8448:21;;-1:-1:-1::0;;;8448:21:7::1;;;;;;;;;;;8424:45;8556:7;8567:1;8556:12:::0;8552:34:::1;;8577:9;;-1:-1:-1::0;;;8577:9:7::1;;;;;;;;;;;8552:34;8596:6;:16:::0;8269:350::o;2256:98:8:-;2341:6;;-1:-1:-1;;;2341:6:8;;;;;;;;;;;13122:142:7;13218:6;;13199:35;;-1:-1:-1;;;13199:35:7;;;;;13035:25:10;;;;-1:-1:-1;;;;;13096:55:10;;;13076:18;;;13069:83;13199:4:7;:18;;;;13008::10;;13199:35:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13194:63;;13243:14;;-1:-1:-1;;;13243:14:7;;;;;;;;;;;6761:277:6;-1:-1:-1;;;;;;;6863:16:6;;;6859:173;;6895:45;6927:3;6932:7;6895:31;:45::i;6859:173::-;6971:50;7000:6;7008:3;7013:7;6971:28;:50::i;2455:490:9:-;2711:4;2705;2699;2693;2685:6;2681:2;2674:5;2669:47;2659:270;;2822:10;2816:4;2809:24;2910:4;2904;2897:18;11454:1189;11617:2;11611:4;11604:16;11674:6;11668:4;11661:20;11814:34;11808:4;11801:48;12272:4;12266;12260;12254;12251:1;12244:5;12237;12232:45;12192:16;12185:24;12181:1;12174:4;12168:11;12165:18;12162:48;11890:405;11863:655;;12411:10;12405:4;12398:24;12499:4;12493;12486:18;11863:655;12625:1;12619:4;12612:15;11454:1189;;;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;295:18;280:34;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:251::-;476:2;470:9;;;506:15;;551:18;536:34;;572:22;;;533:62;530:88;;;598:18;;:::i;660:275::-;731:2;725:9;796:2;777:13;;-1:-1:-1;;773:27:10;761:40;;831:18;816:34;;852:22;;;813:62;810:88;;;878:18;;:::i;:::-;914:2;907:22;660:275;;-1:-1:-1;660:275:10:o;940:183::-;1000:4;1033:18;1025:6;1022:30;1019:56;;;1055:18;;:::i;:::-;-1:-1:-1;1100:1:10;1096:14;1112:4;1092:25;;940:183::o;1128:154::-;-1:-1:-1;;;;;1207:5:10;1203:54;1196:5;1193:65;1183:93;;1272:1;1269;1262:12;1287:737;1341:5;1394:3;1387:4;1379:6;1375:17;1371:27;1361:55;;1412:1;1409;1402:12;1361:55;1448:6;1435:20;1474:4;1498:60;1514:43;1554:2;1514:43;:::i;:::-;1498:60;:::i;:::-;1592:15;;;1678:1;1674:10;;;;1662:23;;1658:32;;;1623:12;;;;1702:15;;;1699:35;;;1730:1;1727;1720:12;1699:35;1766:2;1758:6;1754:15;1778:217;1794:6;1789:3;1786:15;1778:217;;;1874:3;1861:17;1891:31;1916:5;1891:31;:::i;:::-;1935:18;;1973:12;;;;1811;;1778:217;;;-1:-1:-1;2013:5:10;1287:737;-1:-1:-1;;;;;;1287:737:10:o;2029:186::-;2077:4;2110:18;2102:6;2099:30;2096:56;;;2132:18;;:::i;:::-;-1:-1:-1;2198:2:10;2177:15;-1:-1:-1;;2173:29:10;2204:4;2169:40;;2029:186::o;2220:462::-;2262:5;2315:3;2308:4;2300:6;2296:17;2292:27;2282:55;;2333:1;2330;2323:12;2282:55;2369:6;2356:20;2400:48;2416:31;2444:2;2416:31;:::i;2400:48::-;2473:2;2464:7;2457:19;2519:3;2512:4;2507:2;2499:6;2495:15;2491:26;2488:35;2485:55;;;2536:1;2533;2526:12;2485:55;2601:2;2594:4;2586:6;2582:17;2575:4;2566:7;2562:18;2549:55;2649:1;2624:16;;;2642:4;2620:27;2613:38;;;;2628:7;2220:462;-1:-1:-1;;;2220:462:10:o;2687:702::-;2798:6;2806;2814;2867:2;2855:9;2846:7;2842:23;2838:32;2835:52;;;2883:1;2880;2873:12;2835:52;2923:9;2910:23;2952:18;2993:2;2985:6;2982:14;2979:34;;;3009:1;3006;2999:12;2979:34;3032:61;3085:7;3076:6;3065:9;3061:22;3032:61;:::i;:::-;3022:71;;3146:2;3135:9;3131:18;3118:32;3102:48;;3175:2;3165:8;3162:16;3159:36;;;3191:1;3188;3181:12;3159:36;;3214:51;3257:7;3246:8;3235:9;3231:24;3214:51;:::i;:::-;3204:61;;;3315:2;3304:9;3300:18;3287:32;3328:31;3353:5;3328:31;:::i;:::-;3378:5;3368:15;;;2687:702;;;;;:::o;3638:455::-;3715:6;3723;3776:2;3764:9;3755:7;3751:23;3747:32;3744:52;;;3792:1;3789;3782:12;3744:52;3832:9;3819:23;3865:18;3857:6;3854:30;3851:50;;;3897:1;3894;3887:12;3851:50;3920:49;3961:7;3952:6;3941:9;3937:22;3920:49;:::i;:::-;3910:59;;;4019:2;4008:9;4004:18;3991:32;4032:31;4057:5;4032:31;:::i;:::-;4082:5;4072:15;;;3638:455;;;;;:::o;4693:247::-;4752:6;4805:2;4793:9;4784:7;4780:23;4776:32;4773:52;;;4821:1;4818;4811:12;4773:52;4860:9;4847:23;4879:31;4904:5;4879:31;:::i;:::-;4929:5;4693:247;-1:-1:-1;;;4693:247:10:o;5137:1357::-;5264:6;5272;5325:2;5313:9;5304:7;5300:23;5296:32;5293:52;;;5341:1;5338;5331:12;5293:52;5381:9;5368:23;5410:18;5451:2;5443:6;5440:14;5437:34;;;5467:1;5464;5457:12;5437:34;5490:61;5543:7;5534:6;5523:9;5519:22;5490:61;:::i;:::-;5480:71;;5570:2;5560:12;;5625:2;5614:9;5610:18;5597:32;5654:2;5644:8;5641:16;5638:36;;;5670:1;5667;5660:12;5638:36;5693:24;;5748:4;5740:13;;5736:27;-1:-1:-1;5726:55:10;;5777:1;5774;5767:12;5726:55;5813:2;5800:16;5836:60;5852:43;5892:2;5852:43;:::i;5836:60::-;5930:15;;;6012:1;6008:10;;;;6000:19;;5996:28;;;5961:12;;;;6036:19;;;6033:39;;;6068:1;6065;6058:12;6033:39;6100:2;6096;6092:11;6112:352;6128:6;6123:3;6120:15;6112:352;;;6214:3;6201:17;6250:2;6237:11;6234:19;6231:109;;;6294:1;6323:2;6319;6312:14;6231:109;6365:56;6413:7;6408:2;6394:11;6390:2;6386:20;6382:29;6365:56;:::i;:::-;6353:69;;-1:-1:-1;6442:12:10;;;;6145;;6112:352;;;6116:3;6483:5;6473:15;;;;;;;;5137:1357;;;;;:::o;6499:847::-;6730:2;6782:21;;;6852:13;;6755:18;;;6874:22;;;6701:4;;6730:2;6915;;6933:18;;;;6974:15;;;6701:4;7017:303;7031:6;7028:1;7025:13;7017:303;;;7090:13;;7132:9;;-1:-1:-1;;;;;7128:58:10;7116:71;;7227:11;;7221:18;7207:12;;;7200:40;7260:12;;;;7295:15;;;;7053:1;7046:9;7017:303;;;-1:-1:-1;7337:3:10;;6499:847;-1:-1:-1;;;;;;;6499:847:10:o;7351:338::-;7493:2;7478:18;;7526:1;7515:13;;7505:144;;7571:10;7566:3;7562:20;7559:1;7552:31;7606:4;7603:1;7596:15;7634:4;7631:1;7624:15;7505:144;7658:25;;;7351:338;:::o;7694:388::-;7771:6;7779;7832:2;7820:9;7811:7;7807:23;7803:32;7800:52;;;7848:1;7845;7838:12;7800:52;7884:9;7871:23;7861:33;;7945:2;7934:9;7930:18;7917:32;7972:18;7964:6;7961:30;7958:50;;;8004:1;8001;7994:12;7958:50;8027:49;8068:7;8059:6;8048:9;8044:22;8027:49;:::i;:::-;8017:59;;;7694:388;;;;;:::o;8087:180::-;8146:6;8199:2;8187:9;8178:7;8174:23;8170:32;8167:52;;;8215:1;8212;8205:12;8167:52;-1:-1:-1;8238:23:10;;8087:180;-1:-1:-1;8087:180:10:o;8272:388::-;8340:6;8348;8401:2;8389:9;8380:7;8376:23;8372:32;8369:52;;;8417:1;8414;8407:12;8369:52;8456:9;8443:23;8475:31;8500:5;8475:31;:::i;:::-;8525:5;-1:-1:-1;8582:2:10;8567:18;;8554:32;8595:33;8554:32;8595:33;:::i;8665:127::-;8726:10;8721:3;8717:20;8714:1;8707:31;8757:4;8754:1;8747:15;8781:4;8778:1;8771:15;8797:250;8882:1;8892:113;8906:6;8903:1;8900:13;8892:113;;;8982:11;;;8976:18;8963:11;;;8956:39;8928:2;8921:10;8892:113;;;-1:-1:-1;;9039:1:10;9021:16;;9014:27;8797:250::o;9052:465::-;9227:6;9216:9;9209:25;9270:2;9265;9254:9;9250:18;9243:30;9190:4;9302:6;9296:13;9345:6;9340:2;9329:9;9325:18;9318:34;9361:79;9433:6;9428:2;9417:9;9413:18;9408:2;9400:6;9396:15;9361:79;:::i;:::-;9501:2;9480:15;-1:-1:-1;;9476:29:10;9461:45;;;;9508:2;9457:54;;9052:465;-1:-1:-1;;;9052:465:10:o;9522:127::-;9583:10;9578:3;9574:20;9571:1;9564:31;9614:4;9611:1;9604:15;9638:4;9635:1;9628:15;9654:125;9719:9;;;9740:10;;;9737:36;;;9753:18;;:::i;9784:881::-;9879:6;9910:2;9953;9941:9;9932:7;9928:23;9924:32;9921:52;;;9969:1;9966;9959:12;9921:52;10002:9;9996:16;10035:18;10027:6;10024:30;10021:50;;;10067:1;10064;10057:12;10021:50;10090:22;;10143:4;10135:13;;10131:27;-1:-1:-1;10121:55:10;;10172:1;10169;10162:12;10121:55;10201:2;10195:9;10224:60;10240:43;10280:2;10240:43;:::i;10224:60::-;10318:15;;;10400:1;10396:10;;;;10388:19;;10384:28;;;10349:12;;;;10424:19;;;10421:39;;;10456:1;10453;10446:12;10421:39;10480:11;;;;10500:135;10516:6;10511:3;10508:15;10500:135;;;10582:10;;10570:23;;10533:12;;;;10613;;;;10500:135;;;10654:5;9784:881;-1:-1:-1;;;;;;;9784:881:10:o;10670:1650::-;10760:6;10791:2;10834;10822:9;10813:7;10809:23;10805:32;10802:52;;;10850:1;10847;10840:12;10802:52;10883:9;10877:16;10912:18;10953:2;10945:6;10942:14;10939:34;;;10969:1;10966;10959:12;10939:34;10992:22;;;;11048:4;11030:16;;;11026:27;11023:47;;;11066:1;11063;11056:12;11023:47;11092:22;;:::i;:::-;11143:2;11137:9;11130:5;11123:24;11185:2;11181;11177:11;11171:18;11198:33;11223:7;11198:33;:::i;:::-;11247:14;;;11240:31;11309:2;11301:11;;11295:18;11322:33;11295:18;11322:33;:::i;:::-;11382:2;11371:14;;11364:31;11434:2;11426:11;;11420:18;11450:16;;;11447:36;;;11479:1;11476;11469:12;11447:36;11502:17;;11553:2;11535:16;;;11531:25;11528:45;;;11569:1;11566;11559:12;11528:45;11597:22;;:::i;:::-;11650:2;11644:9;11635:7;11628:26;11693:2;11689;11685:11;11679:18;11722:2;11712:8;11709:16;11706:36;;;11738:1;11735;11728:12;11706:36;11761:17;;;-1:-1:-1;11809:4:10;11801:13;;11797:27;-1:-1:-1;11787:55:10;;11838:1;11835;11828:12;11787:55;11867:2;11861:9;11851:19;;11892:48;11908:31;11936:2;11908:31;:::i;11892:48::-;11963:2;11956:5;11949:17;12003:7;11998:2;11993;11989;11985:11;11981:20;11978:33;11975:53;;;12024:1;12021;12014:12;11975:53;12037:67;12101:2;12096;12089:5;12085:14;12080:2;12076;12072:11;12037:67;:::i;:::-;12120:16;;;12113:31;;;;-1:-1:-1;12171:2:10;12160:14;;12153:31;;;;-1:-1:-1;12231:3:10;12223:12;;;12217:19;12200:15;;;12193:44;12284:3;12276:12;;;12270:19;12253:15;;;12246:44;12164:5;10670:1650;-1:-1:-1;;;10670:1650:10:o;12325:128::-;12392:9;;;12413:11;;;12410:37;;;12427:18;;:::i;13163:277::-;13230:6;13283:2;13271:9;13262:7;13258:23;13254:32;13251:52;;;13299:1;13296;13289:12;13251:52;13331:9;13325:16;13384:5;13377:13;13370:21;13363:5;13360:32;13350:60;;13406:1;13403;13396:12","linkReferences":{},"immutableReferences":{"1056":[{"start":297,"length":32},{"start":1320,"length":32},{"start":1552,"length":32},{"start":2082,"length":32}],"1058":[{"start":423,"length":32}]}},"methodIdentifiers":{"NATIVE()":"a0cf0aea","allocate(bytes,address)":"ef2920fc","distribute(address[],bytes,address)":"0a6f0ee9","getAllo()":"15cc481e","getPayouts(address[],bytes[])":"b2b878d0","getPoolAmount()":"4ab4ba42","getPoolId()":"38fff2d0","getRecipientStatus(address)":"eb11af93","getStrategyId()":"42fda9c7","increasePoolAmount(uint256)":"f5b0dfb7","initialize(uint256,bytes)":"edd146cc","isPoolActive()":"df868ed3","isValidAllocator(address)":"4d31d087","registerRecipient(bytes,address)":"2bbe0cae","withdraw(address,address)":"f940e385"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allo\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INPUT_LENGTH_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NON_ZERO_VALUE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOOP\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"distribute(address[],bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to distribute to the recipients\",\"_recipientIds\":\"The IDs of the recipients\",\"_sender\":\"The address of the sender\"}},\"getAllo()\":{\"returns\":{\"_0\":\"The Allo contract\"}},\"getPayouts(address[],bytes[])\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to get the payout summary for the recipients\",\"_recipientIds\":\"The IDs of the recipients\"},\"returns\":{\"_0\":\"The payout summary for the recipients\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"details\":\"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\",\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"'true' if the pool is active, otherwise 'false'\"}},\"isValidAllocator(address)\":{\"details\":\"How the allocator is determined is up to the strategy implementation.\",\"params\":{\"_allocator\":\"The address to check if it is a valid allocator for the strategy.\"},\"returns\":{\"_0\":\"'true' if the address is a valid allocator, 'false' otherwise\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"recipientId\":\"The recipientId\"}},\"withdraw(address,address)\":{\"params\":{\"_recipient\":\"Address to send the funds to\",\"_token\":\"Token address\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NON_ZERO_VALUE()\":[{\"notice\":\"Thrown when the value is non-zero\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_IMPLEMENTED()\":[{\"notice\":\"Thrown when the function is not implemented\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_ACTIVE()\":[{\"notice\":\"Thrown when registration is active.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"},\"allocate(bytes,address)\":{\"notice\":\"Allocates to a recipient.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"Distributes funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the 'Allo' contract.\"},\"getPayouts(address[],bytes[])\":{\"notice\":\"Gets the payout summary for recipients.\"},\"getPoolAmount()\":{\"notice\":\"Getter for the 'poolAmount'.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId'.\"},\"getRecipientStatus(address)\":{\"notice\":\"Getter for the status of a recipient.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'strategyId'.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the pool amount.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"Getter for whether or not the pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks if the '_allocator' is a valid allocator.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"Registers a recipient.\"},\"withdraw(address,address)\":{\"notice\":\"Withdraw pool funds\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/strategies/easy-rpgf/EasyRPGFStrategy.sol\":\"EasyRPGFStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[\":@chainlink/contracts-ccip/=lib/chainlink-ccip/chains/evm/contracts/\",\":@chainlink/contracts/=lib/chainlink-evm/contracts/\",\":@forge-std/=lib/forge-std/src/\",\":@mocks/=test/mocks/\",\":@multicall3/=lib/multicall3/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/\",\":@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":@sablier/v2-core/=lib/allo-v2/lib/v2-core/\",\":@solady/=lib/solady/src/\",\":@solbase/=lib/solbase/src/\",\":@superfluid-finance/=lib/allo-v2/lib/superfluid-protocol-monorepo/packages/\",\":ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/\",\":allo-v2/=lib/allo-v2/contracts/\",\":chainlink-ccip/=lib/chainlink-ccip/\",\":chainlink-evm/=lib/chainlink-evm/\",\":ds-test/=lib/allo-v2/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/\",\":eas-proxy/=lib/allo-v2/lib/eas-proxy/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/allo-v2/lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hats-protocol/=lib/allo-v2/lib/hats-protocol/\",\":hedgey-vesting/=lib/allo-v2/lib/hedgey-vesting/contracts/\",\":lib/ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/\",\":openzeppelin-contracts-upgradeable/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/allo-v2/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/contracts/\",\":permit2/=lib/allo-v2/lib/permit2/\",\":prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/\",\":prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/\",\":solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/\",\":solmate/=lib/allo-v2/lib/permit2/lib/solmate/\",\":superfluid-protocol-monorepo/=lib/allo-v2/lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\",\":utils/=lib/allo-v2/lib/hats-protocol/lib/utils/\",\":v2-core/=lib/allo-v2/lib/v2-core/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xb4d42b75def46f3fd1e182f5b18bde5df74822d3666580e66d34802f362b517e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9492cb300be5f7cd8c58f54ff472b66c108827833bf1156028d8513b91e8f29\",\"dweb:/ipfs/QmccCdVZWsPhJEExajS6gANPyg2pEpD6RZwyjFNrdJM4Ek\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0bebb91f070e1d5666bd4abf6c47888161c3f2731655a817a01e1d6da18add50\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://367d45f768983763e78fe321e3499d9c4ac08728c490dbbd02db80844c2e1daf\",\"dweb:/ipfs/QmQPG7WyyN8gUcVa1t9HcdegZdEbgyKusmD34gmxBK7W9j\"]},\"lib/allo-v2/contracts/core/libraries/Errors.sol\":{\"keccak256\":\"0x67e3c1109948a92cb3a01e8c2325c5f1b748ecbd4c9cd5bee34e81fa737f77ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9603d3f1c4bb4b44a55663e71688a9d10786038e5dfa5039aa354572af1a53c3\",\"dweb:/ipfs/QmWNxsPH9YaJJkFiiU6oJ642i5kHxPzpRYfR5H8zSH4KaP\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]},\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a\",\"dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv\"]},\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":{\"keccak256\":\"0x99f4e3bfd5cea354c2ef9e9774d7bdb2310faec5e7a21a619d87377b40eba135\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f84412d189fa7c6ea3656409af156fad084b1a541850798da3e76549e3124588\",\"dweb:/ipfs/QmT3roFjt41PX7zgjT7KdThFU37Fh7F6vEyKooSzpfTBvq\"]},\"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":{\"keccak256\":\"0xd81033dccd011b8949d09dee81803dbbcf125b4e929714cf61e7d6c4df5c1337\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0c517404d5eb9523930598835005e2c1baf8597d89d3cd78c296c5962735060c\",\"dweb:/ipfs/QmcNdTPWLkkKUduyRWLYtoekfT5Xq9rTH5Uq1RFnv2qE6r\"]},\"lib/allo-v2/contracts/strategies/easy-rpgf/EasyRPGFStrategy.sol\":{\"keccak256\":\"0xace77df6198adce8eb50c06223140dc5788b7ad7d61ecd4966261a1d55346c8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e4126d860f9325049694d517ccf56a3583e4c08fce969012f1c7aa2ae4f4005\",\"dweb:/ipfs/QmeJ6uFTYAMqjuP6P2gCiDjbRohhqnWE6tNEoKcHnGWSWX\"]},\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_allo","type":"address"},{"internalType":"string","name":"_name","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"ALLOCATION_ACTIVE"},{"inputs":[],"type":"error","name":"ALLOCATION_NOT_ACTIVE"},{"inputs":[],"type":"error","name":"ALLOCATION_NOT_ENDED"},{"inputs":[],"type":"error","name":"ALREADY_INITIALIZED"},{"inputs":[],"type":"error","name":"AMOUNT_MISMATCH"},{"inputs":[],"type":"error","name":"ANCHOR_ERROR"},{"inputs":[],"type":"error","name":"ARRAY_MISMATCH"},{"inputs":[],"type":"error","name":"INPUT_LENGTH_MISMATCH"},{"inputs":[],"type":"error","name":"INVALID"},{"inputs":[],"type":"error","name":"INVALID_ADDRESS"},{"inputs":[],"type":"error","name":"INVALID_FEE"},{"inputs":[],"type":"error","name":"INVALID_METADATA"},{"inputs":[],"type":"error","name":"INVALID_REGISTRATION"},{"inputs":[],"type":"error","name":"IS_APPROVED_STRATEGY"},{"inputs":[],"type":"error","name":"MISMATCH"},{"inputs":[],"type":"error","name":"NONCE_NOT_AVAILABLE"},{"inputs":[],"type":"error","name":"NON_ZERO_VALUE"},{"inputs":[],"type":"error","name":"NOOP"},{"inputs":[],"type":"error","name":"NOT_APPROVED_STRATEGY"},{"inputs":[],"type":"error","name":"NOT_ENOUGH_FUNDS"},{"inputs":[],"type":"error","name":"NOT_IMPLEMENTED"},{"inputs":[],"type":"error","name":"NOT_INITIALIZED"},{"inputs":[],"type":"error","name":"NOT_PENDING_OWNER"},{"inputs":[],"type":"error","name":"POOL_ACTIVE"},{"inputs":[],"type":"error","name":"POOL_INACTIVE"},{"inputs":[],"type":"error","name":"RECIPIENT_ALREADY_ACCEPTED"},{"inputs":[{"internalType":"address","name":"recipientId","type":"address"}],"type":"error","name":"RECIPIENT_ERROR"},{"inputs":[],"type":"error","name":"RECIPIENT_NOT_ACCEPTED"},{"inputs":[],"type":"error","name":"REGISTRATION_ACTIVE"},{"inputs":[],"type":"error","name":"REGISTRATION_NOT_ACTIVE"},{"inputs":[],"type":"error","name":"UNAUTHORIZED"},{"inputs":[],"type":"error","name":"ZERO_ADDRESS"},{"inputs":[{"internalType":"address","name":"recipientId","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"address","name":"sender","type":"address","indexed":false}],"type":"event","name":"Allocated","anonymous":false},{"inputs":[{"internalType":"address","name":"recipientId","type":"address","indexed":true},{"internalType":"address","name":"recipientAddress","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"sender","type":"address","indexed":false}],"type":"event","name":"Distributed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"bool","name":"active","type":"bool","indexed":false}],"type":"event","name":"PoolActive","anonymous":false},{"inputs":[{"internalType":"address","name":"recipientId","type":"address","indexed":true},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"address","name":"sender","type":"address","indexed":false}],"type":"event","name":"Registered","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"NATIVE","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"stateMutability":"payable","type":"function","name":"allocate"},{"inputs":[{"internalType":"address[]","name":"_recipientIds","type":"address[]"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"distribute"},{"inputs":[],"stateMutability":"view","type":"function","name":"getAllo","outputs":[{"internalType":"contract IAllo","name":"","type":"address"}]},{"inputs":[{"internalType":"address[]","name":"_recipientIds","type":"address[]"},{"internalType":"bytes[]","name":"_data","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"getPayouts","outputs":[{"internalType":"struct IStrategy.PayoutSummary[]","name":"","type":"tuple[]","components":[{"internalType":"address","name":"recipientAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPoolAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPoolId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_recipientId","type":"address"}],"stateMutability":"view","type":"function","name":"getRecipientStatus","outputs":[{"internalType":"enum IStrategy.Status","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStrategyId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"increasePoolAmount"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"isPoolActive","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_allocator","type":"address"}],"stateMutability":"view","type":"function","name":"isValidAllocator","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"stateMutability":"payable","type":"function","name":"registerRecipient","outputs":[{"internalType":"address","name":"recipientId","type":"address"}]},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_recipient","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdraw"},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"allocate(bytes,address)":{"details":"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.","params":{"_data":"The data to use to allocate to the recipient","_sender":"The address of the sender"}},"distribute(address[],bytes,address)":{"details":"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.","params":{"_data":"The data to use to distribute to the recipients","_recipientIds":"The IDs of the recipients","_sender":"The address of the sender"}},"getAllo()":{"returns":{"_0":"The Allo contract"}},"getPayouts(address[],bytes[])":{"details":"The encoded '_data' will be determined by the strategy implementation.","params":{"_data":"The data to use to get the payout summary for the recipients","_recipientIds":"The IDs of the recipients"},"returns":{"_0":"The payout summary for the recipients"}},"getPoolAmount()":{"returns":{"_0":"The balance of the pool"}},"getPoolId()":{"returns":{"_0":"The ID of the pool"}},"getRecipientStatus(address)":{"params":{"_recipientId":"The ID of the recipient"},"returns":{"_0":"The status of the recipient"}},"getStrategyId()":{"returns":{"_0":"The ID of the strategy"}},"increasePoolAmount(uint256)":{"details":"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.","params":{"_amount":"The amount to increase the pool by"}},"initialize(uint256,bytes)":{"params":{"_data":"The encoded data","_poolId":"The ID of the pool"}},"isPoolActive()":{"returns":{"_0":"'true' if the pool is active, otherwise 'false'"}},"isValidAllocator(address)":{"details":"How the allocator is determined is up to the strategy implementation.","params":{"_allocator":"The address to check if it is a valid allocator for the strategy."},"returns":{"_0":"'true' if the address is a valid allocator, 'false' otherwise"}},"registerRecipient(bytes,address)":{"details":"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.","params":{"_data":"The data to use to register the recipient","_sender":"The address of the sender"},"returns":{"recipientId":"The recipientId"}},"withdraw(address,address)":{"params":{"_recipient":"Address to send the funds to","_token":"Token address"}}},"version":1},"userdoc":{"kind":"user","methods":{"NATIVE()":{"notice":"Address of the native token"},"allocate(bytes,address)":{"notice":"Allocates to a recipient."},"distribute(address[],bytes,address)":{"notice":"Distributes funds (tokens) to recipients."},"getAllo()":{"notice":"Getter for the 'Allo' contract."},"getPayouts(address[],bytes[])":{"notice":"Gets the payout summary for recipients."},"getPoolAmount()":{"notice":"Getter for the 'poolAmount'."},"getPoolId()":{"notice":"Getter for the 'poolId'."},"getRecipientStatus(address)":{"notice":"Getter for the status of a recipient."},"getStrategyId()":{"notice":"Getter for the 'strategyId'."},"increasePoolAmount(uint256)":{"notice":"Increases the pool amount."},"initialize(uint256,bytes)":{"notice":"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."},"isPoolActive()":{"notice":"Getter for whether or not the pool is active."},"isValidAllocator(address)":{"notice":"Checks if the '_allocator' is a valid allocator."},"registerRecipient(bytes,address)":{"notice":"Registers a recipient."},"withdraw(address,address)":{"notice":"Withdraw pool funds"}},"version":1}},"settings":{"remappings":["@chainlink/contracts-ccip/=lib/chainlink-ccip/chains/evm/contracts/","@chainlink/contracts/=lib/chainlink-evm/contracts/","@forge-std/=lib/forge-std/src/","@mocks/=test/mocks/","@multicall3/=lib/multicall3/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/","@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/","@sablier/v2-core/=lib/allo-v2/lib/v2-core/","@solady/=lib/solady/src/","@solbase/=lib/solbase/src/","@superfluid-finance/=lib/allo-v2/lib/superfluid-protocol-monorepo/packages/","ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/","allo-v2/=lib/allo-v2/contracts/","chainlink-ccip/=lib/chainlink-ccip/","chainlink-evm/=lib/chainlink-evm/","ds-test/=lib/allo-v2/lib/forge-std/lib/ds-test/src/","eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/","eas-proxy/=lib/allo-v2/lib/eas-proxy/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/allo-v2/lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hats-protocol/=lib/allo-v2/lib/hats-protocol/","hedgey-vesting/=lib/allo-v2/lib/hedgey-vesting/contracts/","lib/ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/","openzeppelin-contracts-upgradeable/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/allo-v2/lib/openzeppelin-contracts/","openzeppelin/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/contracts/","permit2/=lib/allo-v2/lib/permit2/","prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/","prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/","solady/=lib/allo-v2/lib/solady/src/","solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/","solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/","solmate/=lib/allo-v2/lib/permit2/lib/solmate/","superfluid-protocol-monorepo/=lib/allo-v2/lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/","utils/=lib/allo-v2/lib/hats-protocol/lib/utils/","v2-core/=lib/allo-v2/lib/v2-core/"],"optimizer":{"enabled":true,"runs":600},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/allo-v2/contracts/strategies/easy-rpgf/EasyRPGFStrategy.sol":"EasyRPGFStrategy"},"evmVersion":"paris","libraries":{}},"sources":{"lib/allo-v2/contracts/core/interfaces/IAllo.sol":{"keccak256":"0xb4d42b75def46f3fd1e182f5b18bde5df74822d3666580e66d34802f362b517e","urls":["bzz-raw://a9492cb300be5f7cd8c58f54ff472b66c108827833bf1156028d8513b91e8f29","dweb:/ipfs/QmccCdVZWsPhJEExajS6gANPyg2pEpD6RZwyjFNrdJM4Ek"],"license":"AGPL-3.0-only"},"lib/allo-v2/contracts/core/interfaces/IRegistry.sol":{"keccak256":"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f","urls":["bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e","dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA"],"license":"MIT"},"lib/allo-v2/contracts/core/interfaces/IStrategy.sol":{"keccak256":"0x0bebb91f070e1d5666bd4abf6c47888161c3f2731655a817a01e1d6da18add50","urls":["bzz-raw://367d45f768983763e78fe321e3499d9c4ac08728c490dbbd02db80844c2e1daf","dweb:/ipfs/QmQPG7WyyN8gUcVa1t9HcdegZdEbgyKusmD34gmxBK7W9j"],"license":"AGPL-3.0-only"},"lib/allo-v2/contracts/core/libraries/Errors.sol":{"keccak256":"0x67e3c1109948a92cb3a01e8c2325c5f1b748ecbd4c9cd5bee34e81fa737f77ea","urls":["bzz-raw://9603d3f1c4bb4b44a55663e71688a9d10786038e5dfa5039aa354572af1a53c3","dweb:/ipfs/QmWNxsPH9YaJJkFiiU6oJ642i5kHxPzpRYfR5H8zSH4KaP"],"license":"AGPL-3.0-only"},"lib/allo-v2/contracts/core/libraries/Metadata.sol":{"keccak256":"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44","urls":["bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c","dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn"],"license":"AGPL-3.0-only"},"lib/allo-v2/contracts/core/libraries/Native.sol":{"keccak256":"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5","urls":["bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a","dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv"],"license":"AGPL-3.0-only"},"lib/allo-v2/contracts/core/libraries/Transfer.sol":{"keccak256":"0x99f4e3bfd5cea354c2ef9e9774d7bdb2310faec5e7a21a619d87377b40eba135","urls":["bzz-raw://f84412d189fa7c6ea3656409af156fad084b1a541850798da3e76549e3124588","dweb:/ipfs/QmT3roFjt41PX7zgjT7KdThFU37Fh7F6vEyKooSzpfTBvq"],"license":"AGPL-3.0-only"},"lib/allo-v2/contracts/strategies/BaseStrategy.sol":{"keccak256":"0xd81033dccd011b8949d09dee81803dbbcf125b4e929714cf61e7d6c4df5c1337","urls":["bzz-raw://0c517404d5eb9523930598835005e2c1baf8597d89d3cd78c296c5962735060c","dweb:/ipfs/QmcNdTPWLkkKUduyRWLYtoekfT5Xq9rTH5Uq1RFnv2qE6r"],"license":"AGPL-3.0-only"},"lib/allo-v2/contracts/strategies/easy-rpgf/EasyRPGFStrategy.sol":{"keccak256":"0xace77df6198adce8eb50c06223140dc5788b7ad7d61ecd4966261a1d55346c8e","urls":["bzz-raw://3e4126d860f9325049694d517ccf56a3583e4c08fce969012f1c7aa2ae4f4005","dweb:/ipfs/QmeJ6uFTYAMqjuP6P2gCiDjbRohhqnWE6tNEoKcHnGWSWX"],"license":"MIT"},"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol":{"keccak256":"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624","urls":["bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298","dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt"],"license":"MIT"}},"version":1},"id":8}