name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci

jobs:
  # THESE ARE RUN LOCALLY. 
  # 
  # solidity-tests:
  #   name: Solidity Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive

  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1

  #     - name: Show Forge version
  #       run: |
  #         forge --version

  #     - name: Run Forge fmt
  #       run: |
  #         cd solidity && forge fmt --check
  #       id: fmt

  #     - name: Run Forge build
  #       run: |
  #         cd solidity && forge build --sizes
  #       id: build

  #     - name: Run Forge tests
  #       run: |
  #         cd solidity && forge test -vvv
  #       id: test

      # - name: Run Forge coverage
      #   run: |
      #     cd solidity && forge coverage --report lcov
      #   id: coverage

  # TODO: Add frontend tests + vercel deploy has checks. 
  # frontend-tests:
  #   name: Frontend Tests
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./frontend
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #         cache: 'yarn'
  #         cache-dependency-path: 'frontend/yarn.lock'

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Run frontend tests
  #       run: yarn test --coverage --watchAll=false

  #     - name: Run frontend linting
  #       run: yarn lint

  #     - name: Build frontend
  #       run: yarn build

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Slither
        run: |
          pip3 install slither-analyzer
          slither .

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: 'frontend/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check for vulnerabilities
        run: yarn audit --audit-level=high
